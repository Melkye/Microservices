selector:
  app: auth # TODO make this work as in example (?)

namespace: bookshop

image:
  name: melkye/microservices-auth
  # name: ashonuyak/microservices-auth
  tag: latest

backendconfig:
  healthcheck:
    path: /auth/ping
    port: 80

lifecycle:
  postStart:
    exec:
      command: ["npm", "run", "typeorm", "--", "migration:run"]

service:
  ports:
    - name: http
      port: 8080
      targetPort: 3000 

# ingress:
#   path: /auth
#   port: 8080

configs:
  POSTGRES_TYPE: "postgres"
  POSTGRES_HOST: "postgres-db"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "auth"

  # TODO do smth with bookshop in var names (and values)
  REDIS_HOST: "redis-auth-master"
  # REDIS_HOST: "redis-auth"
  REDIS_PORT: "6379"
  
  #REDIS_DB: redis-auth # TODO need redis db or not??

secrets:
  # TODO move to common
  # postgres:postgres
  POSTGRES_USER: "cG9zdGdyZXM="
  POSTGRES_PASSWORD: "cG9zdGdyZXM="

  # postgres://postgres:postgres@postgres-db:5432/auth?sslmode=disable
  POSTGRES_URL: "cG9zdGdyZXM6Ly9wb3N0Z3Jlczpwb3N0Z3Jlc0Bwb3N0Z3Jlcy1kYjo1NDMyL2F1dGg/c3NsbW9kZT1kaXNhYmxl"

  # doesn't work
  # # abuba:abuba
  # POSTGRES_USER: "YWJ1YmE="
  # POSTGRES_PASSWORD: "YWJ1YmE="

  # # postgres://abuba:abuba@postgres-db:5432/user?sslmode=disable
  # POSTGRES_URL: "cG9zdGdyZXM6Ly9hYnViYTphYnViYUBwb3N0Z3Jlcy1kYjo1NDMyL3VzZXI/c3NsbW9kZT1kaXNhYmxl"


  REDIS_USERNAME: "cmVkaXM="
  REDIS_PASSWORD: "cmVkaXM="

  # # redis://redis-auth:6379
  # REDIS_URL: "cmVkaXM6Ly9yZWRpcy1hdXRoOjYzNzk="
  # # redis://redis@redis-auth-master:6379
  # REDIS_URL: "cmVkaXM6Ly9yZWRpc0ByZWRpcy1hdXRoLW1hc3Rlcjo2Mzc5"
  # redis://redis:redis@redis-auth-master:6379
  REDIS_URL: "cmVkaXM6Ly9yZWRpczpyZWRpc0ByZWRpcy1hdXRoLW1hc3Rlcjo2Mzc5"
  
  JWT_SECRET_ACCESS: "YWNjZXNzYWNjZXNzYWxv"
  JWT_SECRET_REFRESH: "cmVmcmVzaHJlZnJlc2hhbGFsbw=="
  ACCESS_TTL: "NjAw"
  REFRESH_TTL: "NjA0ODAw"
  BCRYPT_SALT_ROUNDS: "MTA="